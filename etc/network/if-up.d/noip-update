#!/bin/sh

#=====================================================================
# CONFIGURATION VARIABLES
#
# Change these to whatever you registered at noip.com, put this script
# in '/etc/network/if-up.d/noip-update', and give it rwx permissions
# for root only (e.g. chmod 0700 noip-update) because it contains your
# noip.com password in clear text.
#
# If 'NOIP_MODE' is 'remote', then 'NOIP_ECHO' is used to determine
# the IP address seen from the Internet; Otherwise, the DHCP IP is
# retrieved from the environment variable DHCP4_IP_ADDRESS.
# 
# The NOIP_ECHO service is assumed to return a bare IP address as
# plain text and nothing else.
# ---------------------------------------------------------------------
NOIP_USER='my_no-ip_username'
NOIP_PASS='my_no-ip_password'
NOIP_HOST='my.no-ip.host.name'
NOIP_MODE=remote
NOIP_ECHO='http://ipecho.net/plain'
#=====================================================================


#=====================================================================
# LOG ROTATION ('logrotate' configuration, optional)
#---------------------------------------------------------------------
# The following 'logrotate' configuration (without the leading hashes,
# of course) may be added to '/etc/logrotate.d/noip-update' so the log
# file generated by this script gets rotated for a few weeks and
# eventually deleted so that the log file doesn't just grow
# indefinitely:
#
# /var/log/noip-update.log {
#        weekly
#        missingok
#        rotate 5
#        compress
#        create 640 root adm
#        notifempty
# }
#
#=====================================================================


#=======================================================
# Probably no need to change anything beyond this point.
#-------------------------------------------------------
NOIP_STUB='dynupdate.no-ip.com/nic/update'
SELF="$(basename $0)"
LOGFILE="/var/log/${SELF}.log"

# Utility function to format log messages:
log () {
    echo "[$(date +'%Y-%m-%d %H:%M:%S')]: $*" >> "${LOGFILE}"
}

# Produce a URL in the right format for NoIP given an IP
url () {
    echo "https://${NOIP_USER}:${NOIP_PASS}@${NOIP_STUB}?hostname=${NOIP_HOST}&myip=$1"
}

# Use 'curl' if possible, otherwise try 'wget', otherwise bail:
if which curl > /dev/null; then
    fetch='curl -s'
elif which wget > /dev/null; then
    fetch='wget -qO-'
else
    log 'No "curl" or "wget"... exiting'
    exit 1
fi

# Decide what IP to use based on current mode:
IP=''
if [ "${NOIP_MODE}" = 'remote' ]; then
    IP=$($fetch "${NOIP_ECHO}")
else
    IP="${DHCP4_IP_ADDRESS}"
fi

# Bail if we couldn't determine the right IP:
if [ -z "$IP" ]; then
    log 'Could not determine IP address... exiting'
    exit 2
fi

# Make the actual change request to NoIP and log the response:
response=$($fetch "$(url $IP)")
if [ -z "$response" ]; then
    response='NO RESPONSE'
fi
log "${IP} ${NOIP_MODE} ${response}"
